services:
  # Order Service
  order-service:
    build:
      context: ./OrderService  # Adjust path based on your file structure
      dockerfile: Dockerfile    # Make sure Dockerfile is correctly located in the OrderService folder
    ports:
      - "4001:4001"
    depends_on:
      - mongo
    networks:
      - app-network
    restart: unless-stopped

  # Payment Service
  payment-service:
    build:
      context: ./PaymentService  # Adjust path based on your file structure
      dockerfile: Dockerfile     # Make sure Dockerfile is correctly located in the PaymentService folder
    ports:
      - "4002:4002"
    depends_on:
      - order-service
    networks:
      - app-network
    restart: unless-stopped

  # Admin Service
  admin_service:
    build:
      context: ./AdminManagementService/api  # Adjust path for api inside AdminManagementService
      dockerfile: Dockerfile
    container_name: admin_service
    ports:
      - "3999:3999"
    volumes:
      - ./AdminManagementService/api:/app  # Adjust volume mapping based on the file structure
    networks:
      - app-network
    environment:
      - NODE_ENV=development
      - MONGO_URI=mongodb+srv://dinithineranjana:dnt123@bakery-shop.ytbrm.mongodb.net/?retryWrites=true&w=majority&appName=Bakery-Shop
    depends_on:
      - mongo_admin
    restart: unless-stopped

  # User Service
  user_service:
    build:
      context: ./UserManagementService/api  # Adjust path for api inside UserManagementService
      dockerfile: Dockerfile
    container_name: user_service
    ports:
      - "4000:4000"
    volumes:
      - ./UserManagementService/api:/app  # Adjust volume mapping based on the file structure
    networks:
      - app-network
    environment:
      - NODE_ENV=development
      - MONGO_URI=mongodb+srv://dinithineranjana:dnt123@bakery-shop.ytbrm.mongodb.net/?retryWrites=true&w=majority&appName=Bakery-Shop
    depends_on:
      - mongo_user
    restart: unless-stopped

  # Mongo Services
  mongo:
    image: mongo:latest
    container_name: mongo
    volumes:
      - mongo-data:/data/db
    ports:
      - "27017:27017"
    networks:
      - app-network

  mongo_admin:
    image: mongo
    container_name: mongo_admin
    ports:
      - "27018:27017"
    volumes:
      - mongo-data-admin:/data/db
    networks:
      - app-network

  mongo_user:
    image: mongo
    container_name: mongo_user
    ports:
      - "27019:27017"
    volumes:
      - mongo-data-user:/data/db
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  mongo-data:
  mongo-data-admin:
  mongo-data-user:
