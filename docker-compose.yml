services:
  # Order Service
  order-service:
    build:
      context: ./OrderService 
      dockerfile: Dockerfile    
    ports:
      - "4001:4001"
    depends_on:
      - mongo
    networks:
      - app-network
    restart: unless-stopped

  # Payment Service
  payment-service:
    build:
      context: ./PaymentService  
      dockerfile: Dockerfile     
    ports:
      - "4002:4002"
    depends_on:
      - order-service
    networks:
      - app-network
    restart: unless-stopped

  # Admin Service
  admin_service:
    build:
      context: ./AdminManagementService/api 
      dockerfile: Dockerfile
    container_name: admin_service
    ports:
      - "3999:3999"
    volumes:
      - ./AdminManagementService/api:/app  
    networks:
      - app-network
    environment:
      - NODE_ENV=development
      - MONGO_URI=mongodb+srv://dinithineranjana:dnt123@bakery-shop.ytbrm.mongodb.net/?retryWrites=true&w=majority&appName=Bakery-Shop
    depends_on:
      - mongo_admin
    restart: unless-stopped

  # User Service
  user_service:
    build:
      context: ./UserManagementService/api  
      dockerfile: Dockerfile
    container_name: user_service
    ports:
      - "4000:4000"
    volumes:
      - ./UserManagementService/api:/app  
    networks:
      - app-network
    environment:
      - NODE_ENV=development
      - MONGO_URI=mongodb+srv://dinithineranjana:dnt123@bakery-shop.ytbrm.mongodb.net/?retryWrites=true&w=majority&appName=Bakery-Shop
    depends_on:
      - mongo_user
    restart: unless-stopped

 # Inventory Service
  inventory_service:
    build:
      context: ./InventoryManagementService/api 
      dockerfile: Dockerfile
    container_name: inventory_service
    ports:
      - "4003:4003"
    volumes:
      - ./InventoryManagementService/api:/app  
    networks:
      - app-network
    environment:
      - NODE_ENV=development
      - MONGO_URI=mongodb+srv://dinithineranjana:dnt123@bakery-shop.ytbrm.mongodb.net/?retryWrites=true&w=majority&appName=Bakery-Shop
    depends_on:
      - mongo_inventory
    restart: unless-stopped
# Delivery Service
  delivery-service:
    build:
      context: ./DeliveryService
      dockerfile: Dockerfile
    container_name: deliveryservice
    ports:
      - "4005:4005"
    networks:
      - app-network
    environment:
      - NODE_ENV=production
    depends_on:
      - mongo 
    restart: unless-stopped

  # Notification Service
  notification-service:
    build:
      context: ./NotificationService
      dockerfile: Dockerfile
    container_name: notificationservice
    ports:
      - "4006:4006"
    networks:
      - app-network
    environment:
      - NODE_ENV=production
    depends_on:
      - mongo  
    restart: unless-stopped
    
  # Mongo Services
  mongo:
    image: mongo:latest
    container_name: mongo
    volumes:
      - mongo-data:/data/db
    ports:
      - "27017:27017"
    networks:
      - app-network

  mongo_admin:
    image: mongo
    container_name: mongo_admin
    ports:
      - "27018:27017"
    volumes:
      - mongo-data-admin:/data/db
    networks:
      - app-network

  mongo_user:
    image: mongo
    container_name: mongo_user
    ports:
      - "27019:27017"
    volumes:
      - mongo-data-user:/data/db
    networks:
      - app-network

 
  # Mongo Inventory Service
  mongo_inventory:
    image: mongo
    container_name: mongo_inventory
    ports:
      - "27020:27017"
    volumes:
      - mongo-data-inventory:/data/db
    networks:
      - app-network

# Define volumes only once
volumes:
  mongo-data:
  mongo-data-admin:
  mongo-data-user:
  mongo-data-inventory:

networks:
  app-network:
    driver: bridge

